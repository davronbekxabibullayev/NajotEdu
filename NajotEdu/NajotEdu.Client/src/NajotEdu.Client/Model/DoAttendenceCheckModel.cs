/*
 * NajotEdu
 *
 * NajotEdu description
 *
 * The version of the OpenAPI document: V1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = NajotEdu.Client.Client.FileParameter;
using OpenAPIDateConverter = NajotEdu.Client.Client.OpenAPIDateConverter;

namespace NajotEdu.Client.Model
{
    /// <summary>
    /// DoAttendenceCheckModel
    /// </summary>
    [DataContract(Name = "DoAttendenceCheckModel")]
    public partial class DoAttendenceCheckModel
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DoAttendenceCheckModel" /> class.
        /// </summary>
        /// <param name="lessonId">lessonId.</param>
        /// <param name="checks">checks.</param>
        public DoAttendenceCheckModel(int lessonId = default(int), List<AttendenceCheckModel> checks = default(List<AttendenceCheckModel>))
        {
            this.LessonId = lessonId;
            this.Checks = checks;
        }

        /// <summary>
        /// Gets or Sets LessonId
        /// </summary>
        [DataMember(Name = "lessonId", EmitDefaultValue = false)]
        public int LessonId { get; set; }

        /// <summary>
        /// Gets or Sets Checks
        /// </summary>
        [DataMember(Name = "checks", EmitDefaultValue = true)]
        public List<AttendenceCheckModel> Checks { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DoAttendenceCheckModel {\n");
            sb.Append("  LessonId: ").Append(LessonId).Append("\n");
            sb.Append("  Checks: ").Append(Checks).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
